plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.example'
version = '1.0.1'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // API 문서화
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final' // validation 을 최신 버전으로 대체 가능
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0' // jwt 사용
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation group: 'org.qlrm', name: 'qlrm', version: '4.0.1'
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'com.google.code.gson:gson:2.8.9' // login token 요청
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar { // .jar 파일을 하나만 생성되도록
    enabled = false
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs' // /static/docs로 복사!
    }
}